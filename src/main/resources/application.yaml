spring:
    security:
        oauth2:
            client:
                registration:
                    google:
                        clientId: ${GOOGLE_CLIENT_ID}
                        clientSecret: ${GOOGLE_CLIENT_SECRET}
                        scope:
                            - openid
                            - profile
                            - email
                    facebook:
                        clientId: ${FACEBOOK_CLIENT_ID}
                        clientSecret: ${FACEBOOK_CLIENT_SECRET}
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:8083/auth/realms/baeldung
                    jwk-set-uri: http://localhost:8083/auth/realms/baeldung/protocol/openid-connect/certs
    jpa:
        hibernate:
            ddl-auto: create
        show-sql: true
        properties:
            hibernate:
                dialect: ${JPA_DIALECT}
        database-platform: ${JPA_DIALECT}

    datasource:
        platform: ${DATASOURCE_PLATFORM}
        url: ${DATASOURCE_URL}
        username: ${DATASOURCE_USERNAME}
        password: ${DATASOURCE_PASSWORD}
        driverClassName: ${DATASOURCE_DRIVER_CLASS}
        initialization-mode: always

server:
    error:
        whitelabel:
            enabled: false
springdoc:
    api-docs:
        enabled: true
        path: /v3/api-docs
    swagger-ui:
        path: /swagger-ui
        disable-swagger-default-url: false
        oauth:
            clientId: ${spring.security.oauth2.client.registration.google.clientId}
            clientSecret: ${spring.security.oauth2.client.registration.google.clientSecret}
            use-pkce-with-authorization-code-grant: true
app:
    auth:
        tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
        tokenExpirationMsec: 864000000

    oauth2:
        authorizedRedirectUris: ${AUTHORIZED_REDIRECT_URIS}

